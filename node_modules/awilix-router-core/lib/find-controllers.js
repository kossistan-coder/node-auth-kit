"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.findControllers = void 0;
const glob = __importStar(require("fast-glob"));
const state_util_1 = require("./state-util");
/**
 * Finds classes using the specified pattern and options.
 *
 * @param pattern Glob pattern
 * @param opts Glob options
 */
function findControllers(pattern, opts) {
    const result = glob.sync(pattern, opts);
    return result
        .map((path) => {
        const items = [];
        // eslint-disable-next-line @typescript-eslint/no-var-requires
        const required = require(path);
        if (required) {
            const stateAndTarget = (0, state_util_1.getStateAndTarget)(required);
            if (stateAndTarget) {
                items.push(stateAndTarget);
                return items;
            }
            // loop through exports - this will cover named as well as a default export
            for (const key of Object.keys(required)) {
                items.push((0, state_util_1.getStateAndTarget)(required[key]));
            }
        }
        return items;
    })
        .reduce((acc, cur) => acc.concat(cur), [])
        .filter((x) => x !== null);
}
exports.findControllers = findControllers;
//# sourceMappingURL=find-controllers.js.map